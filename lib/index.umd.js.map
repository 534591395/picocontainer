{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/source.ts","../src/app.ts","../src/constants.ts","../src/app_element.ts","../src/index.ts"],"sourcesContent":["/**\n * 获取静态资源\n * @param {string} url 静态资源地址\n */\n export function fetchSource (url: string) {\n  return fetch(url).then((res) => {\n    return res.text()\n  })\n}\n","\nimport { fetchSource } from './utils'\n\nexport default function loadHtml (app: any) {\n  fetchSource(app.url).then((html) => {\n    html = html\n      .replace(/<head[^>]*>[\\s\\S]*?<\\/head>/i, (match) => {\n        // 将head标签替换为picocontainer-app-head，因为web页面只允许有一个head标签\n        return match\n          .replace(/<head/i, '<picocontainer-app-head')\n          .replace(/<\\/head>/i, '</picocontainer-app-head>')\n      })\n      .replace(/<body[^>]*>[\\s\\S]*?<\\/body>/i, (match) => {\n        // 将body标签替换为picocontainer-app-body，防止与基座应用的body标签重复导致的问题。\n        return match\n          .replace(/<body/i, '<picocontainer-app-body')\n          .replace(/<\\/body>/i, '</picocontainer-app-body>')\n      })\n\n    // 将html字符串转化为DOM结构\n    const htmlDom = document.createElement('div')\n    htmlDom.innerHTML = html\n    console.log('html:', htmlDom)\n\n    // 进一步提取和处理js、css等静态资源\n    extractSourceDom(htmlDom, app)\n\n    // picocontainer-app-head元素\n    const picocontainerAppHead = htmlDom.querySelector('picocontainer-app-head')\n    // 如果有远程css资源，则通过fetch请求\n    if (app.source.links.size) {\n      fetchLinksFromHtml(app, picocontainerAppHead, htmlDom)\n    } else {\n      app.onLoad(htmlDom)\n    }\n\n    // 如果有远程js资源，则通过fetch请求\n    if (app.source.scripts.size) {\n      fetchScriptsFromHtml(app, htmlDom)\n    } else {\n      app.onLoad(htmlDom)\n    }\n\n  }).catch((e) => {\n    console.error('加载html出错', e)\n  })\n}\n\n/**\n * 递归处理每一个子元素\n * @param parent 父元素\n * @param app 应用实例\n */\n function extractSourceDom(parent: any, app: any) {\n  const children = Array.from(parent.children)\n\n  // 递归每一个子元素\n  children.length && children.forEach((child) => {\n    extractSourceDom(child, app)\n  })\n\n  for (const dom of children) {\n    if (dom instanceof HTMLLinkElement) {\n      // 提取css地址\n      const href = dom.getAttribute('href')\n      if (dom.getAttribute('rel') === 'stylesheet' && href) {\n        // 计入source缓存中\n        app.source.links.set(href, {\n          code: '', // 代码内容\n        })\n      }\n      // 删除原有元素\n      parent.removeChild(dom)\n    } else if (dom instanceof HTMLScriptElement) {\n      // 并提取js地址\n      const src = dom.getAttribute('src')\n      if (src) { // 远程script\n        app.source.scripts.set(src, {\n          code: '', // 代码内容\n          isExternal: true, // 是否远程script\n        })\n      } else if (dom.textContent) { // 内联script\n        const nonceStr = Math.random().toString(36).substr(2, 15)\n        app.source.scripts.set(nonceStr, {\n          code: dom.textContent, // 代码内容\n          isExternal: false, // 是否远程script\n        })\n      }\n\n      parent.removeChild(dom)\n    } else if (dom instanceof HTMLStyleElement) {\n      // 进行样式隔离\n    }\n  }\n}\n\n\n/**\n * 获取link远程资源\n * @param app 应用实例\n * @param microAppHead micro-app-head\n * @param htmlDom html DOM结构\n */\n export function fetchLinksFromHtml (app: any, microAppHead: any, htmlDom: any) {\n  const linkEntries: any = Array.from(app.source.links.entries())\n  // 通过fetch请求所有css资源\n  const fetchLinkPromise = []\n  for (const [url] of linkEntries) {\n    fetchLinkPromise.push(fetchSource(app.url+url))\n  }\n\n  Promise.all(fetchLinkPromise).then((res) => {\n    for (let i = 0; i < res.length; i++) {\n      const code = res[i]\n      // 拿到css资源后放入style元素并插入到micro-app-head中\n      const link2Style = document.createElement('style')\n      link2Style.textContent = code\n      microAppHead.appendChild(link2Style)\n\n      // 将代码放入缓存，再次渲染时可以从缓存中获取\n      linkEntries[i][1].code = code\n    }\n\n    // 处理完成后执行onLoad方法\n    app.onLoad(htmlDom)\n  }).catch((e) => {\n    console.error('加载css出错', e)\n  })\n}\n\n/**\n * 获取js远程资源\n * @param app 应用实例\n * @param htmlDom html DOM结构\n */\n export function fetchScriptsFromHtml (app: any, htmlDom: any) {\n  const scriptEntries: any = Array.from(app.source.scripts.entries())\n  // 通过fetch请求所有js资源\n  const fetchScriptPromise = []\n  for (const [url, info] of scriptEntries) {\n    // 如果是内联script，则不需要请求资源\n    fetchScriptPromise.push(info.code ? Promise.resolve(info.code) :  fetchSource(app.url+url))\n  }\n\n  Promise.all(fetchScriptPromise).then((res) => {\n    for (let i = 0; i < res.length; i++) {\n      const code = res[i]\n      // 将代码放入缓存，再次渲染时可以从缓存中获取\n      scriptEntries[i][1].code = code\n    }\n\n    // 处理完成后执行onLoad方法\n    app.onLoad(htmlDom)\n  }).catch((e) => {\n    console.error('加载js出错', e)\n  })\n}\n","// 应用  ，SSR\nimport loadHtml from './source'\n\nexport interface CreateAppParam {\n  name: string\n  url: string\n  scopecss?: boolean\n  useSandbox?: boolean\n  macro?: boolean\n  inline?: boolean\n  baseroute?: string\n  container?: HTMLElement | ShadowRoot\n}\n\nexport default class PicocontainerApp {\n  name: string = ''\n  url: string = ''\n  container: HTMLElement | ShadowRoot | null = null\n  loadCount = 0\n\n  constructor({ name, url, container}: CreateAppParam) {\n    this.container = container ?? null\n    this.name = name\n    this.url = url\n    this.status = 'loading'\n    loadHtml(this)\n  }\n\n  status = 'created' // 组件状态，包括 created/loading/mount/unmount\n\n  // 存放应用的静态资源\n  source: any = {\n    links: new Map(), // link元素对应的静态资源\n    scripts: new Map(), // script元素对应的静态资源\n    html: ''\n  }\n\n  // 资源加载完时执行\n  onLoad (htmlDom: any) {\n    this.loadCount = this.loadCount ? this.loadCount + 1 : 1\n    // 第二次执行且组件未卸载时执行渲染\n    if (this.loadCount === 2 && this.status !== 'unmount') {\n      // 记录DOM结构用于后续操作\n      this.source.html = htmlDom\n      // 执行mount方法\n      this.mount()\n    }\n  }\n\n  /**\n   * 资源加载完成后进行渲染\n   */\n  mount () {\n    // 克隆DOM节点\n    const cloneHtml = this.source.html.cloneNode(true)\n    // 创建一个fragment节点作为模版，这样不会产生冗余的元素\n    const fragment = document.createDocumentFragment()\n    Array.from(cloneHtml.childNodes).forEach((node: any) => {\n      fragment.appendChild(node)\n    })\n\n    // 将格式化后的DOM结构插入到容器中\n    this.container?.appendChild(fragment)\n\n    // 执行js\n    this.source.scripts.forEach((info: any) => {\n      (0, eval)(info.code)\n    })\n\n    // 标记应用为已渲染\n    this.status = 'mounted'\n  }\n\n  /**\n   * 卸载应用\n   * 执行关闭沙箱，清空缓存等操作\n   */\n  unmount () {}\n}\n\n// 资源缓存\nexport const appInstanceMap = new Map()\n","export enum ObservedAttrName {\n  NAME = 'name',\n  URL = 'url',\n}\n","\nimport CreateApp, { appInstanceMap } from './app'\n\nimport { ObservedAttrName } from './constants'\n\n// 自定义元素\nclass MyElement extends HTMLElement {\n  // 声明需要监听的属性名，只有这些属性变化时才会触发attributeChangedCallback\n  static get observedAttributes() {\n    return ['name', 'url']\n  }\n\n  appName = ''\n  appUrl = ''\n\n  constructor() {\n    super()\n  }\n\n  connectedCallback() {\n    // 元素被插入到DOM时执行，此时去加载子应用的静态资源并渲染\n    console.log('picocontainer-app is connected')\n    // 创建微应用实例\n    const app = new CreateApp({\n      name: this.appName!,\n      url: this.appUrl!,\n      container: this,\n    })\n\n    // 记入缓存，用于后续功能\n    appInstanceMap.set(this.appName, app)\n  }\n\n  disconnectedCallback () {\n    // 元素从DOM中删除时执行，此时进行一些卸载操作\n    console.log('picocontainer-app has disconnected')\n\n    // 获取应用实例\n    const app = appInstanceMap.get(this.appName)\n    // 如果有属性destory，则完全卸载应用包括缓存的文件\n    app.unmount(this.hasAttribute('destory'))\n  }\n\n  attributeChangedCallback (attr: ObservedAttrName, _oldVal: string, newVal: string): void {\n    // 元素属性发生变化时执行，可以获取name、url等属性的值\n    console.log(`attribute ${attr}: ${newVal}-${_oldVal}`)\n\n    if (this[attr === ObservedAttrName.NAME ? 'appName' : 'appUrl'] !== newVal) {\n      if (attr === ObservedAttrName.URL && !this.appUrl) {\n        this.appUrl = newVal\n      } else if (attr === ObservedAttrName.NAME && !this.appName) {\n        this.appName = newVal\n      }\n    }\n  }\n\n}\n\nexport function defineElement () {\n  // 如果已经定义过，则忽略\n  if (!window.customElements.get('picocontainer-app')) {\n    /**\n     * 注册元素\n     * 注册后，就可以像普通元素一样使用picocontainer-app，当picocontainer-app元素被插入或删除DOM时即可触发相应的生命周期函数。\n     */\n    window.customElements.define(`picocontainer-app`, MyElement)\n  }\n}\n","// 参考：https://zhuanlan.zhihu.com/p/395752022\n// 入口文件\n\nimport { defineElement } from './app_element'\n\nconst SimplePicocontainerApp = {\n  start() {\n    defineElement()\n  }\n}\n\nexport default SimplePicocontainerApp\n"],"names":["fetchSource","url","fetch","then","res","text","loadHtml","app","html","replace","match","htmlDom","document","createElement","innerHTML","console","log","extractSourceDom","picocontainerAppHead","querySelector","source","links","size","microAppHead","linkEntries","Array","from","entries","fetchLinkPromise","push","Promise","all","i","length","code","link2Style","textContent","appendChild","onLoad","catch","e","error","fetchLinksFromHtml","scripts","scriptEntries","fetchScriptPromise","info","resolve","fetchScriptsFromHtml","parent","children","forEach","child","dom","HTMLLinkElement","href","getAttribute","set","removeChild","HTMLScriptElement","src","isExternal","nonceStr","Math","random","toString","substr","PicocontainerApp","constructor","name","container","this","Map","status","loadCount","mount","cloneHtml","cloneNode","fragment","createDocumentFragment","childNodes","node","eval","unmount","appInstanceMap","ObservedAttrName","MyElement","HTMLElement","super","observedAttributes","connectedCallback","CreateApp","appName","appUrl","disconnectedCallback","get","hasAttribute","attributeChangedCallback","attr","_oldVal","newVal","NAME","URL","SimplePicocontainerApp","start","window","customElements","define"],"mappings":"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"}